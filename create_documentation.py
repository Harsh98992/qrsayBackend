from g4f.client import Client

client = Client()

# response = client.chat.completions.create(
#     model="gpt-4o-mini",
#     messages=[{"role": "user", "content": "Hello"}],
#     web_search = False
# )
# print(response.choices[0].message.content)

def get_response(message):
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": message}],
        web_search = False
    )
    return response.choices[0].message.content
# here get all the files in the current directory and make there documentation in the markdown format and save it in the documentation folder
# for example if there is a file chat.py then the documentation of the file should be saved in the documentation folder as chat.md
# the documentation will be generated by the chatgpt

# get all the files in the current directory and files in the subdirectories and subdirectories of subdirectories
# for each file  get the documentation from the chatgpt and save it in the documentation folder  as filename.md
import glob
import re

# not only python files but also other files like txt, md, etc
files = glob.glob('**/*.*', recursive=True)

for file in files:
    with open(file) as f:
        content = f.read()

        content = "please generate documentation for this file in markdown format\n" + content
        response = get_response(content)
        with open('documentation/' + file + '.md', 'w') as f:
            f.write(response)